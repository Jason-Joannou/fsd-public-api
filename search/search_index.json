{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the FSD Public API Documentation","text":""},{"location":"#project-overview","title":"Project Overview","text":""},{"location":"#business-context","title":"Business Context","text":"<p>Blockchain technology has revolutionized the financial industry since its inception, with Bitcoin being the most prominent example. As the first and most recognized cryptocurrency, Bitcoin paved the way for numerous alternative coins (altcoins), each offering unique features and use cases. However, the cryptocurrency market remains highly volatile, with prices often fluctuating dramatically. This volatility presents both opportunities and challenges for various stakeholders, including investors, regulators, and developers. Understanding the underlying patterns of this market is crucial for making informed decisions that can lead to maximizing profits and minimizing risks.</p>"},{"location":"#problems-and-opportunities","title":"Problems and Opportunities","text":"<p>The cryptocurrency market's volatility is a double-edged sword. On one hand, it creates opportunities for significant profits; on the other, it poses substantial risks for investors. The primary problem is the lack of understanding and predictability of these market fluctuations, which can lead to uninformed decisions and potential losses. However, this volatility also presents an opportunity for stakeholders to develop strategies that can capitalize on market movements. By analyzing historical data and identifying patterns, there is an opportunity to gain insights into how different factors, such as Bitcoin\u2019s price movements, market capitalization, and external events like Bitcoin halving, impact the market.</p>"},{"location":"#vision","title":"Vision","text":"<p>Our vision is to create a comprehensive tool that leverages data analysis and visualization to provide stakeholders with actionable insights into the cryptocurrency market. By developing a Python-based analytical engine and an interactive JavaScript dashboard, we aim to offer a platform where users can explore correlations, assess volatility, and understand the impact of significant events on the market. This tool will empower investors to make data-driven decisions, help regulators monitor market stability, and provide enthusiasts and entrepreneurs with a deeper understanding of market dynamics.</p>"},{"location":"#why-is-the-project-important","title":"Why is the Project Important?","text":"<p>The importance of this project lies in its potential to demystify the cryptocurrency market for a wide range of stakeholders. As the market continues to grow and attract more participants, the need for reliable tools to analyze and predict market behavior becomes increasingly critical. This project not only addresses the immediate needs of investors and regulators but also contributes to the broader adoption and stability of cryptocurrencies by providing a clearer understanding of their behavior. In a market characterized by rapid changes and uncertainty, the ability to predict and respond to trends can make the difference between success and failure.</p>"},{"location":"#why-the-public-api-was-developed-separately","title":"Why the Public API Was Developed Separately","text":"<p>While our primary project focuses on delivering a robust analytical engine and an interactive dashboard for in-depth market analysis, the public API was developed separately to address specific needs and opportunities for broader access and usability. Here\u2019s why this was a crucial decision:</p> <ul> <li> <p>Enhanced Accessibility: The public API provides a streamlined way for developers and stakeholders to integrate their own data analysis into their applications and tools. By offering programmatic access to these functions, we can extend our reach and facilitate greater interaction with our users.</p> </li> <li> <p>Improved Financial Literacy: By making financial analytics and visualizations accessible through an API, we aim to promote financial literacy. Users can build custom applications or dashboards that suit their specific needs, helping them understand market trends and make informed decisions.</p> </li> <li> <p>Encouraging Innovation: The API allows for the creation of new tools and applications, fostering innovation in the financial technology space. This separation enables external developers to experiment and build on our work, leading to novel use cases and solutions.</p> </li> <li> <p>Focused Development: Developing the API separately ensures that we can tailor it specifically for integration and accessibility without compromising the core functionality and performance of our main analytical tools. This separation of concerns helps maintain a high level of quality and reliability in both the API and the primary application.</p> </li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with the Public API, explore the available endpoints and learn how to interact with them to integrate our analysis and visualization tools into your applications.</p> <p>For detailed usage instructions and examples, refer to the API Documentation.</p>"},{"location":"api/endpoints/","title":"API Endpoints","text":""},{"location":"api/endpoints/#api-root","title":"API Root","text":""},{"location":"api/endpoints/#get","title":"GET /","text":"<p>Returns a welcome message for the FSD public API.</p> <p>Returns: - JSON response with a welcome message.</p> <p>Example Response <pre><code>{\n    \"message\": \"Welcome to the FSD public API\"\n}\n</code></pre></p>"},{"location":"api/endpoints/#plotting-endpoints","title":"Plotting Endpoints","text":""},{"location":"api/endpoints/#post-line_graph","title":"POST /line_graph","text":"<p>Generates a line graph based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>x</code> (List[Union[int, float, str]]): Data for the x-axis.</li> <li><code>y</code> (List[Union[int, float]]): Data for the y-axis.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>line_color</code> (str): Color of the line.</li> <li><code>marker_style</code> (str): Style of the markers.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"x\": [1, 2, 3],\n    \"y\": [10, 15, 13],\n    \"x_axis_title\": \"Time\",\n    \"y_axis_title\": \"Value\",\n    \"plot_title\": \"Sample Line Graph\",\n    \"line_color\": \"red\",\n    \"marker_style\": \"square\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-bar_graph","title":"POST /bar_graph","text":"<p>Generates a bar graph based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>x</code> (List[Union[int, float, str]]): Data for the x-axis.</li> <li><code>y</code> (List[Union[int, float]]): Data for the y-axis.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>bar_color</code> (str): Color of the bars.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"x\": [\"A\", \"B\", \"C\"],\n    \"y\": [5, 10, 7],\n    \"x_axis_title\": \"Categories\",\n    \"y_axis_title\": \"Values\",\n    \"plot_title\": \"Sample Bar Graph\",\n    \"bar_color\": \"green\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-scatter_plot","title":"POST /scatter_plot","text":"<p>Generates a scatter plot based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>x</code> (List[Union[int, float, str]]): Data for the x-axis.</li> <li><code>y</code> (List[Union[int, float]]): Data for the y-axis.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>point_color</code> (str): Color of the points.</li> <li><code>marker_style</code> (str): Style of the markers.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"x\": [1, 2, 3],\n    \"y\": [4, 5, 6],\n    \"x_axis_title\": \"X Axis\",\n    \"y_axis_title\": \"Y Axis\",\n    \"plot_title\": \"Sample Scatter Plot\",\n    \"point_color\": \"blue\",\n    \"marker_style\": \"triangle\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-histogram","title":"POST /histogram","text":"<p>Generates a histogram based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>data</code> (List[Union[int, float]]): Data to be plotted in the histogram.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>bar_color</code> (str): Color of the bars.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"data\": [1, 2, 2, 3, 4, 5],\n    \"x_axis_title\": \"Values\",\n    \"y_axis_title\": \"Frequency\",\n    \"plot_title\": \"Sample Histogram\",\n    \"bar_color\": \"purple\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-pie_chart","title":"POST /pie_chart","text":"<p>Generates a pie chart based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>labels</code> (List[str]): Labels for the pie chart segments.</li> <li><code>values</code> (List[Union[int, float]]): Values for each segment of the pie chart.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"labels\": [\"A\", \"B\", \"C\"],\n    \"values\": [30, 40, 30],\n    \"plot_title\": \"Sample Pie Chart\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-box_plot","title":"POST /box_plot","text":"<p>Generates a box plot based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>data</code> (List[Union[int, float]]): Data to be plotted in the box plot.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>box_color</code> (str): Color of the box plot.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"data\": [1, 2, 3, 4, 5],\n    \"x_axis_title\": \"X Axis\",\n    \"y_axis_title\": \"Y Axis\",\n    \"plot_title\": \"Sample Box Plot\",\n    \"box_color\": \"orange\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-heatmap","title":"POST /heatmap","text":"<p>Generates a heatmap based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>x</code> (List[str]): Data for the x-axis.</li> <li><code>y</code> (List[str]): Data for the y-axis.</li> <li><code>z</code> (List[List[float]]): Data for the heatmap values.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"x\": [\"A\", \"B\", \"C\"],\n    \"y\": [\"X\", \"Y\", \"Z\"],\n    \"z\": [[1, 2, 3], [4, 5, 6], [7, 8, 9]],\n    \"plot_title\": \"Sample Heatmap\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-area_chart","title":"POST /area_chart","text":"<p>Generates an area chart based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>x</code> (List[Union[int, float, str]]): Data for the x-axis.</li> <li><code>y</code> (List[Union[int, float]]): Data for the y-axis.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>fill_color</code> (str): Color for the filled area.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"x\": [1, 2, 3],\n    \"y\": [10, 15, 13],\n    \"x_axis_title\": \"X Axis\",\n    \"y_axis_title\": \"Y Axis\",\n    \"plot_title\": \"Sample Area Chart\",\n    \"fill_color\": \"lightgreen\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-bubble_chart","title":"POST /bubble_chart","text":"<p>Generates a bubble chart based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>x</code> (List[Union[int, float, str]]): Data for the x-axis.</li> <li><code>y</code> (List[Union[int, float]]): Data for the y-axis.</li> <li><code>sizes</code> (List[Union[int, float]]): Sizes of the bubbles.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"x\": [1, 2, 3],\n    \"y\": [4, 5, 6],\n    \"sizes\": [20, 30, 40],\n    \"x_axis_title\": \"X Axis\",\n    \"y_axis_title\": \"Y Axis\",\n    \"plot_title\": \"Sample Bubble Chart\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-candlestick_chart","title":"POST /candlestick_chart","text":"<p>Generates a candlestick chart based on the provided data.</p> <p>Arguments:</p> <ul> <li><code>dates</code> (List[str]): Dates for the candlestick chart.</li> <li><code>open</code> (List[float]): Opening values.</li> <li><code>high</code> (List[float]): High values.</li> <li><code>low</code> (List[float]): Low values.</li> <li><code>close</code> (List[float]): Closing values.</li> <li><code>x_axis_title</code> (str): Title for the x-axis.</li> <li><code>y_axis_title</code> (str): Title for the y-axis.</li> <li><code>plot_title</code> (str): Title for the plot.</li> <li><code>html_embedding</code> (bool): If True, returns the plot as HTML.</li> </ul> <p>Returns: - JSON or HTML response with the plot.</p> <p>Example Request: <pre><code>{\n    \"dates\": [\"2024-01-01\", \"2024-01-02\", \"2024-01-03\"],\n    \"open\": [100, 102, 101],\n    \"high\": [105, 106, 104],\n    \"low\": [99, 100, 98],\n    \"close\": [102, 101, 103],\n    \"x_axis_title\": \"Dates\",\n    \"y_axis_title\": \"Price\",\n    \"plot_title\": \"Sample Candlestick Chart\",\n    \"html_embedding\": false\n}\n</code></pre></p>"},{"location":"api/endpoints/#general-financial-calculation-endpoints","title":"General Financial Calculation Endpoints","text":""},{"location":"api/endpoints/#post-calculate_compound_interest","title":"POST /calculate_compound_interest","text":"<p>Calculates the compound interest based on the provided parameters.</p> <p>Arguments:</p> <ul> <li><code>principal</code> (float): The initial amount of money.</li> <li><code>rate</code> (float): The annual interest rate (decimal).</li> <li><code>time</code> (int): The number of years the money is invested.</li> <li><code>n</code> (int): The number of times that interest is compounded per year.</li> </ul> <p>Returns: - JSON response with the amount of money accumulated after the specified time.</p> <p>Example Request: <pre><code>{\n    \"principal\": 1000,\n    \"rate\": 0.05,\n    \"time\": 10,\n    \"n\": 4\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"amount\": 1647.009\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_loan_payments","title":"POST /calculate_loan_payments","text":"<p>Calculates the monthly payment for a loan based on the provided parameters.</p> <p>Arguments:</p> <ul> <li><code>principal</code> (float): The loan amount.</li> <li><code>annual_rate</code> (float): The annual interest rate (percentage).</li> <li><code>num_payments</code> (int): The total number of payments.</li> </ul> <p>Returns: - JSON response with the monthly payment amount.</p> <p>Example Request: <pre><code>{\n    \"principal\": 50000,\n    \"annual_rate\": 5.0,\n    \"num_payments\": 120\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"monthly_payment\": 530.44\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_savings_growth","title":"POST /calculate_savings_growth","text":"<p>Calculates the future value of savings based on the provided parameters.</p> <p>Arguments:</p> <ul> <li><code>deposit</code> (float): The amount of each deposit.</li> <li><code>rate</code> (float): The annual interest rate (decimal).</li> <li><code>periods</code> (int): The number of periods (e.g., months).</li> </ul> <p>Returns: - JSON response with the future value of the savings.</p> <p>Example Request: <pre><code>{\n    \"deposit\": 200,\n    \"rate\": 0.04,\n    \"periods\": 12\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"future_value\": 2492.48\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_retirement_savings","title":"POST /calculate_retirement_savings","text":"<p>Calculates the total retirement savings based on current savings, annual contributions, interest rate, and years.</p> <p>Arguments:</p> <ul> <li><code>current_savings</code> (float): The current amount of savings.</li> <li><code>annual_contribution</code> (float): The amount contributed annually.</li> <li><code>rate</code> (float): The annual interest rate (decimal).</li> <li><code>years</code> (int): The number of years of saving.</li> </ul> <p>Returns: - JSON response with the total savings at retirement.</p> <p>Example Request: <pre><code>{\n    \"current_savings\": 50000,\n    \"annual_contribution\": 5000,\n    \"rate\": 0.05,\n    \"years\": 20\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"total_savings\": 212347.68\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_savings_rate","title":"POST /calculate_savings_rate","text":"<p>Calculates the savings rate needed to reach a financial goal based on income, goal amount, and time frame.</p> <p>Arguments:</p> <ul> <li><code>income</code> (float): Monthly income.</li> <li><code>goal_amount</code> (float): Financial goal amount.</li> <li><code>months</code> (int): Number of months to save.</li> <li><code>rate</code> (float): Interest rate (decimal).</li> </ul> <p>Returns: - JSON response with the required savings rate.</p> <p>Example Request: <pre><code>{\n    \"income\": 5000,\n    \"goal_amount\": 60000,\n    \"months\": 12,\n    \"rate\": 0.03\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"savings_rate\": 10.00\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-estimate_emergency_fund","title":"POST /estimate_emergency_fund","text":"<p>Estimates the emergency fund required based on monthly expenses and the number of months to cover.</p> <p>Arguments:</p> <ul> <li><code>monthly_expenses</code> (float): Monthly expenses.</li> <li><code>months</code> (int): Number of months to cover.</li> </ul> <p>Returns: - JSON response with the estimated emergency fund amount.</p> <p>Example Request: <pre><code>{\n    \"monthly_expenses\": 1500,\n    \"months\": 6\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"emergency_fund\": 9000\n}\n</code></pre></p>"},{"location":"api/endpoints/#investment-calculation-endpoints","title":"Investment Calculation Endpoints","text":""},{"location":"api/endpoints/#post-calculate_future_value_investment","title":"POST /calculate_future_value_investment","text":"<p>Calculates the future value of an investment given the principal, annual return rate, and number of years.</p> <p>Arguments:</p> <ul> <li><code>principal</code> (float): The initial amount of money invested.</li> <li><code>annual_return</code> (float): The annual return rate (as a decimal).</li> <li><code>years</code> (int): The number of years the money is invested.</li> </ul> <p>Returns: - JSON response with the future value of the investment.</p> <p>Example Request: <pre><code>{\n    \"principal\": 1000,\n    \"annual_return\": 0.05,\n    \"years\": 10\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"future_value\": 1647.01\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_roi","title":"POST /calculate_roi","text":"<p>Calculates the Return on Investment (ROI) given the initial investment and final amount.</p> <p>Arguments:</p> <ul> <li><code>initial_investment</code> (float): The amount of money initially invested.</li> <li><code>final_amount</code> (float): The amount of money after the investment.</li> </ul> <p>Returns: - JSON response with the ROI percentage.</p> <p>Example Request: <pre><code>{\n    \"initial_investment\": 1000,\n    \"final_amount\": 1500\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"roi\": 50.0\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-estimate_investment_risk","title":"POST /estimate_investment_risk","text":"<p>Estimates the investment risk based on the standard deviation of returns.</p> <p>Arguments:</p> <ul> <li><code>returns</code> (List[float]): A list of historical returns.</li> </ul> <p>Returns: - JSON response with the estimated risk.</p> <p>Example Request: <pre><code>{\n    \"returns\": [0.02, 0.03, 0.05, -0.01, 0.04]\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"risk\": 0.025\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_investment_growth","title":"POST /calculate_investment_growth","text":"<p>Calculates the future value of an investment with annual contributions.</p> <p>Arguments:</p> <ul> <li><code>principal</code> (float): The initial amount of money invested.</li> <li><code>annual_contribution</code> (float): The amount contributed annually.</li> <li><code>annual_growth_rate</code> (float): The annual growth rate (as a decimal).</li> <li><code>years</code> (int): The number of years the money is invested.</li> </ul> <p>Returns: - JSON response with the future value of the investment.</p> <p>Example Request: <pre><code>{\n    \"principal\": 1000,\n    \"annual_contribution\": 100,\n    \"annual_growth_rate\": 0.05,\n    \"years\": 10\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"future_value\": 2210.00\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_dividend_yield","title":"POST /calculate_dividend_yield","text":"<p>Calculates the dividend yield of a stock.</p> <p>Arguments:</p> <ul> <li><code>annual_dividends</code> (float): The total amount of dividends paid annually.</li> <li><code>stock_price</code> (float): The current price of the stock.</li> </ul> <p>Returns: - JSON response with the dividend yield percentage.</p> <p>Example Request: <pre><code>{\n    \"annual_dividends\": 5,\n    \"stock_price\": 100\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"dividend_yield\": 5.0\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-calculate_portfolio_performance","title":"POST /calculate_portfolio_performance","text":"<p>Calculates the performance of a portfolio based on the returns and weights.</p> <p>Arguments:</p> <ul> <li><code>returns</code> (List[float]): A list of returns for each asset in the portfolio.</li> <li><code>weights</code> (List[float]): A list of weights corresponding to each asset in the portfolio.</li> </ul> <p>Returns: - JSON response with the portfolio return.</p> <p>Example Request: <pre><code>{\n    \"returns\": [0.05, 0.07, 0.03],\n    \"weights\": [0.4, 0.4, 0.2]\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"portfolio_return\": 0.052\n}\n</code></pre></p>"},{"location":"api/endpoints/#post-estimate_investment_horizon","title":"POST /estimate_investment_horizon","text":"<p>Estimates the number of years needed to reach a target amount given the principal and annual return.</p> <p>Arguments:</p> <ul> <li><code>principal</code> (float): The initial amount of money invested.</li> <li><code>target_amount</code> (float): The target amount to be reached.</li> <li><code>annual_return</code> (float): The annual return rate (as a decimal).</li> </ul> <p>Returns: - JSON response with the number of years needed.</p> <p>Example Request: <pre><code>{\n    \"principal\": 1000,\n    \"target_amount\": 2000,\n    \"annual_return\": 0.07\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n    \"years_needed\": 10.24\n}\n</code></pre></p>"},{"location":"api/endpoints/#quality-of-life-endpoints","title":"Quality of Life Endpoints","text":""},{"location":"api/endpoints/#get-get_crypto_news","title":"GET /get_crypto_news","text":"<p>Fetches the latest cryptocurrency news articles from crypto.news.</p> <p>Returns:</p> <ul> <li>JSONResponse: A JSON response containing a list of news articles with titles and links.</li> </ul> <p>Example Response:</p> <pre><code>[\n    {\n        \"title\": \"Bitcoin Hits All-Time High\",\n        \"link\": \"https://crypto.news/article/bitcoin-hits-all-time-high\"\n    },\n    {\n        \"title\": \"Ethereum 2.0 Update Released\",\n        \"link\": \"https://crypto.news/article/ethereum-2-0-update-released\"\n    }\n]\n</code></pre>"},{"location":"api/overview/","title":"API Overview","text":"<p>Welcome to the FSD API documentation. This guide offers a comprehensive overview of the available endpoints and how to use them. You can access the root API endpoint at fsd-api.axh0cuaybfezfjdp.uksouth.azurecontainer.io</p>"},{"location":"api/overview/#plotting-endpoints","title":"Plotting Endpoints","text":"<p>These endpoints are designed for generic use, allowing users to plot their own data in various formats.</p> <ul> <li>GET /: Returns a welcome message.</li> <li>POST /line_graph: Generates a line graph.</li> <li>POST /bar_graph: Generates a bar graph.</li> <li>POST /scatter_plot: Generates a scatter plot.</li> <li>POST /histogram: Generates a histogram.</li> <li>POST /pie_chart: Generates a pie chart.</li> <li>POST /box_plot: Generates a box plot.</li> <li>POST /heatmap: Generates a heatmap.</li> <li>POST /area_chart: Generates an area chart.</li> <li>POST /bubble_chart: Generates a bubble chart.</li> <li>POST /candlestick_chart: Generates a candlestick chart.</li> </ul>"},{"location":"api/overview/#general-financial-calculation-endpoints","title":"General Financial Calculation Endpoints","text":"<p>These endpoints provide various financial calculations to help with personal finance management.</p> <ul> <li>POST /calculate_compound_interest: Calculates the compound interest based on the provided parameters.</li> <li>POST /calculate_loan_payments: Calculates the monthly payment for a loan.</li> <li>POST /calculate_savings_growth: Calculates the future value of savings.</li> <li>POST /calculate_retirement_savings: Calculates the total retirement savings.</li> <li>POST /calculate_savings_rate: Calculates the savings rate needed to reach a financial goal.</li> <li>POST /estimate_emergency_fund: Estimates the emergency fund required.</li> </ul>"},{"location":"api/overview/#investment-calculation-endpoints","title":"Investment Calculation Endpoints","text":"<p>These endpoints provide various calculations related to investment management.</p> <ul> <li>POST /calculate_future_value_investment: Calculates the future value of an investment.</li> <li>POST /calculate_roi: Calculates the Return on Investment (ROI).</li> <li>POST /estimate_investment_risk: Estimates the investment risk based on the standard deviation of returns.</li> <li>POST /calculate_investment_growth: Calculates the future value of an investment with annual contributions.</li> <li>POST /calculate_dividend_yield: Calculates the dividend yield of a stock.</li> <li>POST /calculate_portfolio_performance: Calculates the performance of a portfolio based on returns and weights.</li> <li>POST /estimate_investment_horizon: Estimates the number of years needed to reach a target amount.</li> </ul>"},{"location":"api/overview/#quality-of-life-endpoints","title":"Quality of Life Endpoints","text":"<p>These endpoints provide features to enhance the user's experience and access useful information.</p> <ul> <li>GET /get_crypto_news: Retrieves the latest cryptocurrency news articles.</li> </ul>"}]}